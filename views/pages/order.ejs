<%- include('../partials/navigation.ejs') %>

<div class="px-5 rounded-md ">

  <div class="flex flex-col justify-between gap-4 py-4 xl:flex-row xl:items-center">

    <p class="text-xl font-semibold xl:text-2xl text-tColor2">Orders</p>


    <div class="flex gap-2 xl:items-center xl:gap-5">
      <!-- <div class="relative ml-auto bg-white">
        <input class="py-2 pl-3 pr-6 focus:outline-none max-w-[205px] rounded-md" type="text"
          placeholder="Search order id..">
        <i class="absolute -translate-y-1/2 fa-solid fa-magnifying-glass top-1/2 right-2 text-tColor"></i>
      </div> -->

      <div class="relative ml-auto">
        <button class="accordion-button menu-list">
          <i class="fa-solid fa-filter"></i>
          <span>Filter By</span>
          <i class="-mt-1 fa-solid fa-sort-down"></i>
        </button>

        <ul class="absolute right-0 p-5 bg-white shadow-md menu-collapse">
          <li><a href="/all-orders">All</a></li>
          <% for (let status of statuses) { %>
          <li id="<%= status.status_id %>"><a
              href="/all-orders?filter=<%= status.status_name %>"><%= status.status_name %></a></li>

          <% } %>
        </ul>
      </div>
    </div>

  </div>



  <!-- All Orders Table -->
  <div class="pb-5">

    <div class="flex flex-col justify-around">

      <div class="pt-5 overflow-x-auto bg-white ">
        <table class="table text-xs md:text-sm ">
          <thead>
            <tr>
              <th>ORDER ID</th>
              <th>ITEM</th>
              <th>PRICE</th>
              <th>STATUS</th>
              <th>EDIT STATUS</th>
              <th>DETAILS</th>
            </tr>
          </thead>
          <tbody>
            <% for (let order of paginatedOrders) { %>
            <tr data-id="<%= order.order_id %>">
              <td class="text-tColor"><%= order.order_id %></td>
              <td>
                <div class="flex items-center gap-4">
                  <!-- <img src="img/Product-1.png" alt="" class="h-9 w-9"> -->

                  <div class="custom-max-w">
                    <p class="font-semibold line-clamp">
                      <%= order.product_names %>

                    </p>
                  </div>

                  <!-- <span class="font-semibold text-primaryColor">+(2more)</span> -->
                </div>
              </td>
              <td><%= order.total_product_price %></td>
              <td>
                <!-- <small
                  class="<%= order.status_name === 'Pending' ? 'font-semibold text-orange-500 bg-orange-100 w-fit px-4 py-1 rounded' : (order.status_name === 'Confirmed' ? 'bg-blue-100 font-semibold text-blue-500 w-fit px-4 py-1 rounded' : (order.status_name === 'Processing' ? 'bg-red-100 font-semibold text-red-500 w-fit px-4 py-1 rounded' : '')) %>">
                  <%= order.status_name %>
                </small> -->
                <% let statusClass = '';
                if (order.status_name === 'Pending') {
                    statusClass = 'badge badge-warning';
                } else if (order.status_name === 'Confirm') {
                    statusClass = 'text-white badge badge-info';
                } else if (order.status_name === 'Processing') {
                    statusClass = 'badge bagde-error';
                } else if (order.status_name === 'Picked') {
                    statusClass = 'badge bagde-success';
                } else if (order.status_name === 'Shipped') {
                    statusClass = 'text-white badge badge-info ';
                } else if (order.status_name === 'Delivered') {
                    statusClass = 'badge badge-primary';
                } else {
                    statusClass = 'default-class'; // Use a default class if none of the conditions match
                }
                %>

                <p class="<%= statusClass %>">
                  <%= order.status_name %>
                </p>
              </td>
              <td>
                <button class="btn btn-secondary btn-xs btn-outline"><i class="bi bi-pencil"></i></button>

                <!-- Pop up Details -->
                <div
                  class="fixed bottom-0 right-0 z-10 flex items-center justify-center hidden w-full h-full table-collapse bg-black/50">

                  <div
                    class="bg-gray-100 border-2 border-primaryColor rounded-lg min-w-[350px] xl:min-w-[550px] p-5 max-h-full overflow-y-auto">

                    <div class="flex items-center justify-between">
                      <p class="font-semibold">Ordered Products</p>
                      <button class="table-close bg-secondaryColor text-white text-sm rounded-[50%] px-[8px] py-[4px]">
                        <i class="fa-solid fa-xmark "></i>
                      </button>
                    </div>

                    <form id="statusForm" method="POST" action="/all-orders">
                      <div class="my-3">
                        <p class="mt-5 mb-2">Status</p>
                        <select
                          class="w-full px-3 py-2 pr-8 border rounded-l appearance-none focus:outline-none focus:shadow-outline"
                          id="status_id" name="status_id">
                          <% for (let status of statuses) { %>
                          <option value="<%= status.status_id %>"
                            <%= order.status_id === status.status_id ? 'selected' : '' %>>
                            <%= status.status_name %></option>

                          <% } %>
                        </select>
                        <input type="hidden" name="order_id" id="order_id" value="<%= order.order_id %>">
                        <!-- <input type="hidden" name="status_name" id="status_name" value="<%= order.status_name %>"> -->
                      </div>
                      <button id="my_button_5" class="w-full px-4 py-2 mt-5 text-white rounded bg-primaryColor"
                        type="submit">Submit</button>
                    </form>


                  </div>
                </div>

              </td>
              <td>
                <button class="btn btn-xs btn-primary btn-outline"><i class="bi bi-eye"></i></button>

                <!-- Pop up Details -->
                <div
                  class="fixed bottom-0 right-0 z-10 flex items-center justify-center hidden w-full h-full table-collapse bg-black/50">

                  <div
                    class="bg-gray-100 border-2 border-primaryColor rounded-lg min-w-[350px] xl:min-w-[550px] p-5 max-h-full overflow-y-auto">

                    <div class="flex items-center justify-between">
                      <p class="font-semibold">Ordered Products</p>
                      <button class="table-close bg-secondaryColor text-white text-sm rounded-[50%] px-[8px] py-[4px]">
                        <i class="fa-solid fa-xmark "></i>
                      </button>
                    </div>

                    <!-- <p class="px-4 py-1 my-2 text-xs font-semibold text-white bg-orange-500 rounded w-fit">Sent to buyer
                      to review</p> -->

                    <table class="w-full profile-table">
                      <thead class="py-5">
                        <tr>
                          <th>Product Name</th>
                          <th>Per Unit Price</th>
                          <th>Quantity</th>
                          <th>Total Price</th>
                        </tr>
                      </thead>

                      <tbody>
                        <% let totalPrice = 0; %>
                        <% const productDetails = JSON.parse(order.product_details); %>
                        <% for (let item of productDetails) { %>
                        <% totalPrice += item.product_quantity * item.product_price; %>
                        <tr class="font-semibold bg-white border-b-8 border-gray-100">
                          <td>
                            <div class="flex items-center gap-4 pl-2">
                              <img src="<%= item.product_image %>" alt="" class="h-9 w-9">
                              <p><%= item.product_name %></p>
                            </div>
                          </td>
                          <td><%= item.product_price %></td>
                          <td>x<%= item.product_quantity %></td>
                          <td><%= item.product_quantity * item.product_price %></td>
                        </tr>
                        <% } %>

                      </tbody>

                    </table>

                    <div class="flex justify-between px-5 py-3 mt-2 text-white rounded-md bg-primaryColor">
                      <span>TOTAL</span>
                      <span><%= totalPrice %></span>
                    </div>

                    <p class="py-3 font-semibold">Ordered Products</p>

                    <table class="w-full profile-table">
                      <thead class="py-5">
                        <tr>
                          <th>Order ID</th>
                          <th>Order Date</th>
                          <th>Delivery Date</th>
                        </tr>
                      </thead>
                      <tbody>

                        <tr class="font-semibold bg-white border-b-8 border-gray-100">
                          <td class="pl-3"><%= order.order_id %></td>
                          <td><%= new Date(order.placed_date).toLocaleDateString('en-GB') %></td>
                          <td><%= new Date(order.delivery_date).toLocaleDateString('en-GB') %></td>
                        </tr>

                      </tbody>

                    </table>

                    <p class="py-3 font-semibold">Delivery Status</p>
                    <p class="text-primaryColor"><%= order.status_name %></p>

                    <!-- <table class="w-full profile-table">
                      <thead class="py-5">
                        <tr>
                          <th>Seller Name</th>
                          <th>Buyer Name</th>
                          <th>Delivery Location</th>
                          <th>Payment Method</th>
                        </tr>
                      </thead>
                      <tbody>

                        <tr class="font-semibold bg-white border-b-8 border-gray-100">
                          <td class="pl-3">MD.Raju</td>
                          <td>Salim Khan</td>
                          <td>Kajla Rajshahi</td>
                          <td class="text-primaryColor">Cash on delivery</td>
                        </tr>


                      </tbody>

                    </table> -->


                  </div>
                </div>

              </td>
            </tr>
            <% } %>

          </tbody>
        </table>

      </div>



    </div>


  </div>

  <div class="flex flex-col justify-between gap-2 py-5 xl:flex-row xl:items-center">
    <p class="text-xs text-center xl:text-sm text-tColor">
      Show <%= paginatedOrders.length %> from <%= orders.length %> orders
    </p>

    <div
      class="grid content-center grid-flow-col gap-3 ml-auto mr-auto font-semibold scale-75 xl:scale-100 xl:mr-0 xl:text-sm text-tColor">
      <% if (page > 1) { %>
      <a class="flex items-center justify-center w-6 h-6 rounded" href="/all-orders?page=<%= page - 1 %>">
        <svg width="6" height="10" viewBox="0 0 8 14" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M7.125 0.75L0.875 7L7.125 13.25" stroke="#84818A" stroke-width="1.5" stroke-linecap="round"
            stroke-linejoin="round" />
        </svg>
      </a>
      <% } %>

      <% const maxPagesToShow = 8;
                                     const startPage = Math.max(1, page - Math.floor(maxPagesToShow / 2));
                                     const endPage = Math.min(
                                         Math.ceil(orders.length / ordersPerPage),
                                         startPage + maxPagesToShow - 1
                                     );
                          
                                     for (let i = startPage; i <= endPage; i++) { %>
      <a class=" h-6 w-6 rounded flex items-center justify-center <%= i === page ? 'bg-blue-100 text-primaryColor' : '' %>"
        href="/all-orders?page=<%= i %>"><%= i %></a>
      <% } %>

      <% if (page < Math.ceil(orders.length / ordersPerPage)) { %>
      <a class="flex items-center justify-center w-6 h-6 rounded" href="/all-orders?page=<%= page + 1 %>">
        <svg width="6" height="10" viewBox="0 0 8 14" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M0.875 0.75L7.125 7L0.875 13.25" stroke="#84818A" stroke-width="1.5" stroke-linecap="round"
            stroke-linejoin="round" />
        </svg>
      </a>
      <% } %>
    </div>
  </div>


</div>


</div>

</section>





<!-- Header Section Script -->
<script>
  // Menu toggle button 
  const toggleButton = document.getElementById("toggle-button");
  const toggleMenu = document.getElementById("toggle-menu");
  var toggleCounter = 1;
  toggleButton.onclick = function () {
    toggleCounter++;
    if (toggleCounter % 2 == 0) {
      toggleMenu.classList.remove("hidden");
      toggleMenu.classList.add("grid");
    }
    else {
      toggleMenu.classList.remove("grid");
      toggleMenu.classList.add("hidden");
    }
  }


</script>

<!-- <script>
  const statusForm = document.getElementById('statusForm');
  const button = document.getElementById('my_button_5');

  button.addEventListener('click', async (event) => {
    event.preventDefault();

    try {
      const order_id = document.querySelector('input[name="order_id"]').value;
      const status_id = document.querySelector('select[name="status_id"]').value;
      const status_name = document.querySelector('input[name="status_name"]').value;

      const data = { order_id, status_id, status_name };
      console.log({ data });

      const apiUrl = '/all-orders';

      const response = await fetch(apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });
      statusForm.close();
      location.reload();


    } catch (error) {
      console.error(error);

    }
  })

  // Add an event listener to the form

</script> -->

<!-- Add this script tag to your HTML file -->
<!-- <script>
  // Function to handle the form submission
  async function updateStatus(event) {
    event.preventDefault(); // Prevent the default form submission behavior
    console.log(2);
    try {
      console.log(1);
      // const order_id = document.querySelector('input[name="order_id"]').value;
      // const status_id = document.querySelector('select[name="status_id"]').value;
      // const status_name = document.querySelector('input[name="status_name"]').value;

      const order_id = document.getElementById('order_id').value;
      const status_id = document.getElementById('status_id').value;
      const status_name = document.getElementById('status_name').value;
      // Data to send to the API
      const data = { order_id, status_id, status_name };

      // API endpoint URL
      const apiUrl = `/all-orders/${order_id}`; // Replace with your actual API URL

      // Make a POST request to the API
      const response = await fetch(apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      if (response.ok) {
        console.log('Data sent successfully to the API');
        // Add any additional handling or feedback here
      } else {
        console.error('Failed to send data to the API');
        // Add error handling or feedback here
      }
    } catch (error) {
      console.error('An error occurred:', error);
      // Add error handling or feedback here
    }
  }

  // Add an event listener to the form
  const statusForm = document.getElementById('statusForm');
  statusForm.addEventListener('submit', updateStatus);
</script> -->




<!-- Accordion Script -->
<script>
  const accordionButtons = document.querySelectorAll('.accordion-button');
  const accordionMenu = document.querySelectorAll('.menu-collapse');

  accordionButtons.forEach(button => {
    button.addEventListener('click', () => {
      const accordionCollapse = button.nextElementSibling;
      button.setAttribute('aria-expanded', button.getAttribute('aria-expanded') === 'false' ? 'true' : 'false');
      accordionCollapse.classList.toggle('hidden');
    });
  });

  // Set all accordion items to collapsed state by default
  document.querySelectorAll('.menu-collapse').forEach(collapse => {
    collapse.classList.add('hidden');
  });


</script>


<!-- Table Script -->
<script>
  const tableButtons = document.querySelectorAll('.table-button');
  const tableMenu = document.querySelectorAll('.table-collapse');
  const tableClose = document.querySelectorAll('.table-close');

  tableButtons.forEach(button => {
    button.addEventListener('click', () => {
      const tableCollapse = button.nextElementSibling;
      button.setAttribute('aria-expanded', button.getAttribute('aria-expanded') === 'false' ? 'true' : 'false');
      tableCollapse.classList.toggle('hidden');
    });
  });

  tableClose.forEach(button => {
    button.addEventListener('click', () => {
      const tableCollapse = button.parentElement.parentElement.parentElement;
      button.setAttribute('aria-expanded', button.getAttribute('aria-expanded') === 'false' ? 'true' : 'false');
      tableCollapse.classList.toggle('hidden');
    });
  });

</script>

<script>
  const tables = document.querySelectorAll('.table-collapse');
  window.onclick = function (event) {
    for (let table of tables) {
      if (event.target == table) {
        table.classList.toggle('hidden');
      }
    }
  };
</script>



</body>

</html>
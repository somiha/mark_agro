<%- include('../partials/navigation.ejs') %>
<div class="mx-5 rounded-md">

    <div class="flex flex-wrap items-center justify-between gap-5 py-10 ">
        <p class="text-xl font-semibold xl:text-2xl text-tColor2">Edit Product</p>
    </div>


    <form action="/edit-product" method="POST" enctype="multipart/form-data">
        <div class="relative grid">

            <div class=" xl:pr-5">
                <div class="grid xl:grid-cols-2 gap-x-5">
                    <div class="flex flex-col">
                        <p class="pt-5 text-lg font-semibold text-tColor2">Product Information</p>
                        <div class="grid grid-cols-1 gap-5 mt-5 ">

                            <div class="">
                                <% for(let product of product_data){ %>

                                <input
                                    class="w-full input input-bordered focus:outline-none focus:shadow-outline hidden"
                                    type="number" id="product_id" name="product_id" value="<%= product.product_id %>">

                                <input
                                    class="w-full input input-bordered focus:outline-none focus:shadow-outline hidden"
                                    type="number" id="featured_image_id" name="featured_image_id"
                                    value="<%= product.featured_image_id %>">

                            </div>


                            <div class="">

                                <p class="mb-2 text-tColor3">Product Name</p>
                                <input class="w-full input input-bordered focus:outline-none focus:shadow-outline"
                                    type="text" id="product_name" name="product_name"
                                    value="<%= product.product_name %>" placeholder="Product Name" required>

                            </div>

                            <div class="grid xl:grid-cols-2 gap-x-5">
                                <div class="">

                                    <p class="mb-2 text-tColor3">Price</p>
                                    <div class="flex items-center">
                                        <input
                                            class="w-full input input-bordered focus:outline-none focus:shadow-outline"
                                            type="number" id="product_price" name="product_price"
                                            value="<%= product.product_price %>" placeholder="Price" required>

                                    </div>

                                    <div class="pb-10">
                                        <p class="mb-2 text-tColor3">Discount</p>
                                        <div class="flex items-center">
                                            <input
                                                class="w-full input input-bordered focus:outline-none focus:shadow-outline"
                                                type="number" id="diccount" value="<%= product.discount %>"
                                                name="discount" placeholder="discount" required>
                                        </div>
                                    </div>
                                </div>

                                <div class="pb-10 ">
                                    <p class="mb-2 text-tColor3">Product Quantity</p>
                                    <input class="w-full input input-bordered focus:outline-none focus:shadow-outline"
                                        type="number" id="quantity" name="quantity" value="<%= product.quantity %>"
                                        placeholder="Product Quantity" required>
                                </div>

                                <div class="pb-10 ">
                                    <p class="mb-2 text-tColor3">Product Unit</p>
                                    <input class="w-full input input-bordered focus:outline-none focus:shadow-outline"
                                        type="text" id="unit" name="unit" value="<%= product.unit %>"
                                        placeholder="Product Unit" required>
                                </div>

                                <div class="pb-10">
                                    <label class="block text-gray-700 text-sm mb-2" for="status">Status</label>
                                    <div class="relative">
                                        <select
                                            class="block appearance-none w-full text-tColor py-3 px-4 pr-8 rounded leading-tight focus:outline-none shadow font-sm bg-gray-100"
                                            name="status" id="status">

                                            <option class="text-black" value="1"
                                                <%= product.status === 1 ? 'selected' : '' %>>Publish</option>
                                            <option class="text-black" value="0"
                                                <%= product.status === 0 ? 'selected' : '' %>>Unpublish</option>
                                        </select>
                                        <div
                                            class="pointer-events-none absolute inset-y-0 right-1 flex items-center px-2 text-white -mt-2">
                                            <i class="fa-solid fa-sort-down text-tColor"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="pb-10">
                            <p class="mb-2 text-tColor3">Description</p>
                            <textarea class="w-full textarea textarea-bordered focus:outline-none focus:shadow-outline"
                                id="product_description" name="product_details_des" rows="4" cols="50"
                                placeholder="Enter Product Description"
                                required><%= product.product_details_des %></textarea>
                        </div>
                        <div id="imageContainer"
                            style="display: flex; justify-content: space-between; margin-top: 20px;">
                        </div>


                        <% if (typeof featuredImageError !=='undefined' && featuredImageError) { %>
                        <div class="mt-2 text-red-500">
                            <%= featuredImageError %>
                        </div>
                        <% } %>

                        <% if (typeof otherImagesError !=='undefined' && otherImagesError) { %>
                        <div class="mt-2 text-red-500">
                            <%= otherImagesError %>
                        </div>
                        <% } %>

                        <div class="w-full py-10 ">
                            <p class="mb-2 text-lg font-semibold text-tColor2">Media</p>

                            <p class="mb-2 text-tColor3">Product Feature Image</p>
                            <input name="product_featured_image" type="file" id="featured_image"
                                class="file-input file-input-bordered file-input-primary" style="margin-top: 5px;"
                                style="margin-top: 5px;" class="hidden" onchange="displaySelectedImage1()" />

                            <p id="selected-image-name" class="mt-3 text-tColor2"></p>

                            <img id="selected-image" src="<%= product.featured_image %>" alt="" width="150px"
                                height="150px" />


                            <div class="pt-5 pb-10">
                                <p class="mb-2 text-tColor3">Add Product Image</p>
                                <div class="mb-5" id="productImageContainer">

                                </div>
                                <button type="button" class="px-4 py-2 text-white rounded bg-primaryColor"
                                    onclick="addImageFunction('#')" id="addImageBtn">Add
                                    Image</button>

                            </div>

                            <p class="mb-2 text-lg font-semibold text-tColor2">Variant</p>
                            <div class="pb-10">
                                <div class="flex flex-col mb-4 gap-y-10 xl:gap-y-5" id="variantContainer">

                                </div>
                                <button type="button" class="px-4 py-2 text-white rounded bg-primaryColor"
                                    onclick="addVarient('','')" id="addBtn">Add
                                    Variant</button>

                            </div>

                            <div class="flex flex-wrap items-center self-start gap-5 mb-5 pr-15">

                                <button type="submit" class="text-white btn btn-primary"
                                    onclick="location.reload()">Save
                                    Products</button>
                            </div>

                        </div>
                    </div>

                    <!-- Product Right Section -->
                    <div class="">
                        <p class="py-5 text-lg font-semibold text-tColor2">Primary Details</p>

                        <div>
                            <p class="mb-2 text-tColor3">Category</p>
                            <div class="relative">
                                <select class="w-full select select-bordered focus:outline-none focus:shadow-outline"
                                    id="product_cat_id" name="product_cat_id" required>
                                    <% for(let cat of extraCat){ %>
                                    <option value="<%= cat.extra_cat_id %>"
                                        <%= cat.extra_cat_id == product.product_cat_id ? 'selected' : '' %>>
                                        <%= cat.extra_cat_name %>
                                    </option>

                                    <% } %>
                                    <!-- Add more options here -->
                                </select>

                            </div>
                        </div>
                        <% } %>
                    </div>

                </div>

            </div>

    </form>

</div>

</div>

</section>





<!-- Header Section Script -->
<script>
    // Menu toggle button 
    const toggleButton = document.getElementById("toggle-button");
    const toggleMenu = document.getElementById("toggle-menu");
    var toggleCounter = 1;
    toggleButton.onclick = function () {
        toggleCounter++;
        if (toggleCounter % 2 == 0) {
            toggleMenu.classList.remove("hidden");
            toggleMenu.classList.add("grid");
        }
        else {
            toggleMenu.classList.remove("grid");
            toggleMenu.classList.add("hidden");
        }
    }
</script>

<script>
    // let product_data = JSON.parse('<%- JSON.stringify(product_data) %>');
    // if (product_data[0]) {
    //     for (let image of product_data[0].non_featured_images.split(',')) {
    //         addImageFunction(image)
    //     }
    // }
</script>



<script>
    // JavaScript to handle dynamically adding and removing subcategory fields
    var variantIds = JSON.parse('<%- JSON.stringify(variant_id) %>');
    var variantNames = JSON.parse('<%- JSON.stringify(variant_name) %>');
    var variantPrices = JSON.parse('<%- JSON.stringify(variant_price) %>');

    console.log({ variantNames });
    console.log({ variantPrices });
    console.log({ variantIds });

    for (let i in variantNames.split(',')) {
        if (variantIds && variantNames && variantPrices) {
            let variantIdsArray = variantIds.split(',');
            let variantNamesArray = variantNames.split(',');
            let variantPricesArray = variantPrices.split(',');
            console.log({ variantIdsArray });
            console.log({ variantNamesArray });
            console.log({ variantPricesArray });
            addVarient(variantNamesArray[i], variantPricesArray[i], variantIdsArray[i]);
        }
    }

    function addVarient(variantName, varientPrice, id) {
        console.log({ variantName }, { varientPrice });

        const variantContainer = document.getElementById("variantContainer");
        const newVariantField = document.createElement("div");
        const trashClickfunction = id ? `deleteVarient(${id})` : "removeSubcategoryField(this)";

        newVariantField.innerHTML = `
            <div class="flex w-full gap-x-5">
            <div class="grid w-full xl:grid-cols-2 gap-y-3 gap-x-5">
            <div class="flex flex-col">
            <p class="mb-2 text-tColor3">Variant Name</p>
            <input class='w-full input input-bordered focus:outline-none focus:shadow-outline' type='text' value="${variantName}"" name='variant_name' placeholder='Variant Name'>
            </div>
            <div class="flex flex-col">
                <p class="mb-2 text-tColor3">Price</p>
                <input class="w-full input input-bordered focus:outline-none focus:shadow-outline" value="${varientPrice}"" type="number" name="variant_price" placeholder="Variant Price"></div>
            </div>
            <button type="button" style="margin-top:30px;" class="self-end text-white btn btn-error btn-outline" onclick="${trashClickfunction}"><i class="fa fa-trash"></i></button>
            </div>
    `;
        variantContainer.appendChild(newVariantField);
    };

    function removeSubcategoryField(button) {
        button.parentNode.remove();
    }
</script>

<script>
    function displaySelectedImage1() {
        const fileInput = document.getElementById("featured_image");
        // const labelText = document.getElementById("label-text");
        const selectedImageName = document.getElementById("selected-image-name");
        const selectedImage = document.getElementById("selected-image");

        if (fileInput.files.length > 0) {
            // labelText.style.display = "none";
            const imageName = fileInput.files[0].name;
            selectedImageName.textContent = `Selected Image: ${imageName}`;
            selectedImage.src = URL.createObjectURL(fileInput.files[0]);
            selectedImage.classList.remove("hidden");
        } else {
            // labelText.style.display = "block";
            selectedImageName.textContent = "";
            selectedImage.src = "";
            selectedImage.classList.add("hidden");
        }
    }
</script>

<script>
    let inputCounter = 1;







    var nonFeaturedImages = JSON.parse('<%- JSON.stringify(non_featured_images) %>');
    var nonFeaturedImageIds = JSON.parse('<%- JSON.stringify(non_featured_image_id) %>');

    for (let image in nonFeaturedImages.split(',')) {
        if (nonFeaturedImages && nonFeaturedImageIds) {
            let nonFeaturedImagesArray = nonFeaturedImages.split(',');
            let nonFeaturedImageIdsArray = nonFeaturedImageIds.split(',');
            addImageFunction(nonFeaturedImagesArray[image], nonFeaturedImageIdsArray[image]);
        }
    }








    function addImageFunction(image, image_id) {
        console.log(image, image_id);
        const productImageContainer = document.getElementById("productImageContainer");
        const newProductImageField = document.createElement("div");
        newProductImageField.className = "flex items-center mb-2";

        // Generate the next input and image IDs
        const inputId = `product_image${inputCounter}`;
        const imgId = `selected-image${inputCounter}`;
        const className = image !== '#' ? '' : 'hidden';
        const trashClickfunction = image !== '#' ? `deleteNonFeaturedImage(${image_id})` : "removeSubcategoryField(this)";
        const inputFunction = image !== '#' ? 'hidden' : '';

        newProductImageField.innerHTML = `
        
            <input id="${inputId}" ${inputFunction} name="product-image" type="file" style="margin-top: 5px; margin-right: 20px" class="file-input file-input-primary file-input-bordered"
                onchange="displaySelectedImage('${inputId}', '${imgId}')"/>
            <p id="selected-image-name${inputCounter}" class="mt-3 text-tColor2"></p>
            <img id="${imgId}" src="${image}" alt=""  class="${className}" width="100px" height="100px"/>
            <button type="button" style="margin-left: 10px;" class="text-white btn btn-error btn-outline" onclick="${trashClickfunction}"><i class="fa fa-trash"></i></button>
        `;

        productImageContainer.appendChild(newProductImageField);

        // Increment the input counter
        inputCounter++;
    };

    function removeSubcategoryField(button) {
        button.parentNode.remove();
    }

    function displaySelectedImage(inputId, imgId) {
        const fileInput = document.getElementById(inputId);
        const selectedImageName = document.getElementById(`selected-image-name${inputId.replace("product_image", "")}`);
        const selectedImage = document.getElementById(imgId);

        if (fileInput.files.length > 0) {
            const imageName = fileInput.files[0].name;
            selectedImageName.textContent = `Selected Image: ${imageName}`;
            selectedImage.src = URL.createObjectURL(fileInput.files[0]);
            selectedImage.classList.remove("hidden");
        } else {
            selectedImageName.textContent = "";
            selectedImage.src = "";
            selectedImage.classList.add("hidden");
        }
    }
</script>



<script>
    const tables = document.querySelectorAll('.table-collapse');
    window.onclick = function (event) {
        for (let table of tables) {
            if (event.target == table) {
                table.classList.toggle('hidden');
            }
        }
    };
</script>


<script>

    async function deleteNonFeaturedImage(image_id) {
        const apiUrl = `/delete-non-featured-image?image_id=${image_id}`;

        const response = await fetch(apiUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        });
        if (response.status === 200) {
            // Page refresh
            location.reload();
        }
    }

    async function deleteVarient(id) {
        console.log({ id });
        const apiUrl = `/delete-variant?id=${id}`;

        const response = await fetch(apiUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        });
        if (response.status === 200) {
            // Page refresh
            location.reload();
        }
    }




</script>

</body>

</html>
<%- include('../partials/navigation.ejs') %>
<div class="mx-5 rounded-md">

    <div class="flex justify-between items-center flex-wrap gap-5 border-b py-10">
        <p class="text-xl xl:text-2xl font-semibold text-tColor2">Add Product</p>
        <!-- <button id="previewButton" class="bg-[#504F54] text-white px-7 py-3 rounded flex items-center gap-2">

            <i class="fa-solid fa-eye"></i>

            <p>Preview</p>

        </button> -->
    </div>

    <!-- Product Upload Section -->
    <form action="/add-products" method="POST" enctype="multipart/form-data">
        <div class="grid grid-cols-1 xl:grid-cols-4 relative">

            <!-- Product Left Section -->
            <div class="col-span-3 xl:border-r xl:pr-5">

                <p class="font-semibold text-lg text-tColor2 pt-5">Product Information</p>

                <!-- Product Information Input Section -->
                <div class="grid grid-cols-1 xl:grid-cols-3 gap-5 mt-5">

                    <div class="col-span-1 xl:col-span-2">
                        <p class="text-tColor3 mb-2">Product Name</p>
                        <input class=" border rounded px-3 py-2 flex-1 focus:outline-none focus:shadow-outline w-full"
                            type="text" id="product_name" name="product_name" placeholder="Product Name" required>
                    </div>

                    <div class="col-span-1">
                        <p class="text-tColor3 mb-2">Price</p>
                        <div class="flex mb-4 items-center">

                            <input
                                class=" border rounded-r rounded-l px-3 py-2 flex-1 focus:outline-none focus:shadow-outline w-full"
                                type="number" id="product_price" name="product_price" placeholder="Price" required>
                        </div>
                    </div>

                    <div class="col-span-1 xl:col-span-2 pb-10">
                        <p class="text-tColor3 mb-2">Product Quantity</p>
                        <input class=" border rounded px-3 py-2 flex-1 focus:outline-none focus:shadow-outline w-full"
                            type="number" id="quantity" name="quantity" placeholder="Product Quantity" required>
                    </div>

                </div>



                <!-- Product Right Section -->
                <div class="xl:absolute top-0 right-0 xl:pl-5 xl:w-1/4 pb-10">
                    <p class="font-semibold text-lg text-tColor2 py-5">Primary Details</p>

                    <div>
                        <p class="text-tColor3 mb-2">Category</p>
                        <div class="relative">
                            <select
                                class=" border rounded-l px-3 py-2 pr-8 appearance-none focus:outline-none focus:shadow-outline w-full"
                                id="product_cat_id" name="product_cat_id" required>
                                <% for(let cat of extraCat){ %>
                                <option value="<%= cat.extra_cat_id %>"><%= cat.extra_cat_name %></option>
                                <% } %>
                                <!-- Add more options here -->
                            </select>
                            <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                                <i class="text-sm fa-solid fa-angle-down"></i>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="border-b pb-10">
                    <p class="text-tColor3 mb-2">Description</p>
                    <textarea class="border rounded-r px-3 py-2 flex-1 focus:outline-none focus:shadow-outline w-full"
                        id="product_description" name="product_details_des" rows="4" cols="50"
                        placeholder="Enter Product Description" required></textarea>
                </div>

                <div id="imageContainer" style="display: flex; justify-content: space-between; margin-top: 20px;"></div>


                <!-- Product Image Upload Section -->
                <% if (typeof featuredImageError !== 'undefined' && featuredImageError) { %>
                <div class="text-red-500 mt-2"><%= featuredImageError %></div>
                <% } %>


                <% if (typeof otherImagesError !== 'undefined' && otherImagesError) { %>
                <div class="text-red-500 mt-2"><%= otherImagesError %></div>
                <% } %>

                <div class="border-b py-10 w-full">
                    <p class="font-semibold text-lg text-tColor2 mb-2">Media</p>


                    <p class="text-tColor3 mb-2">Product Feature Image</p>
                    <input name="product-featured-image" type="file" id="featured_image"
                        class="dropzone-feature-file custom-feature-file-label" style="margin-top: 5px;" class="hidden"
                        onchange="displaySelectedImage1()" required />

                    <p id="selected-image-name" class="text-tColor2 mt-3"></p>

                    <img id="selected-image" src="#" alt="" class="hidden" />

                    <!-- <label class="block">
                        <span class="sr-only">Choose profile photo</span>
                        <input type="file" class="block w-full text-sm text-slate-500
                          file:mr-4 file:py-2 file:px-4
                          file:rounded-full file:border-0
                          file:text-sm file:font-semibold
                          file:bg-violet-50 file:text-violet-700
                          hover:file:bg-violet-100
                        " />
                    </label> -->





                    <div class="pb-10 pt-5">
                        <p class="text-tColor3 mb-2">Add Product Image</p>
                        <div class="mb-5" id="productImageContainer">

                        </div>
                        <button type="button" class="bg-primaryColor text-white rounded px-4 py-2" id="addImageBtn">Add
                            Image</button>

                    </div>

                    <p class="font-semibold text-lg text-tColor2 mb-2">Variant</p>
                    <div class="pb-10">

                        <div class="mb-4" id="variantContainer">

                        </div>
                        <button type="button" class="bg-primaryColor text-white rounded px-4 py-2" id="addBtn">Add
                            Variant</button>

                    </div>

                    <!-- <div class="border-b py-10 w-fit">
                        <p class="font-semibold text-lg text-tColor2 mb-2">Product Variant</p>


                        <div class="col-span-1 xl:col-span-2">
                            <p class="text-tColor3 mb-2">Variant Name</p>
                            <input
                                class=" border rounded px-3 py-2 flex-1 focus:outline-none focus:shadow-outline w-full"
                                type="text" id="variant_name" name="variant_name" placeholder="Variant Name">
                        </div>

                        <div class="col-span-1">
                            <p class="text-tColor3 mb-2">Price</p>
                            <div class="flex mb-4 items-center">

                                <input
                                    class=" border rounded-r rounded-l px-3 py-2 flex-1 focus:outline-none focus:shadow-outline w-full"
                                    type="number" id="variant_price" name="variant_price" placeholder="Variant Price">
                            </div>
                        </div>
                    </div> -->

                    <div class="flex justify-center items-center flex-wrap gap-5 pr-15 mb-5">

                        <button type="submit" class="bg-primaryColor text-white rounded px-4 py-2 ">Save
                            Products</button>
                    </div>



                </div>

            </div>

    </form>

</div>

<!-- <div id="previewModal" class="hidden">
    <div class="modal-content">
        <h1>Product Preview</h1>
        <p id="previewProductName">Product Name: </p>
        <p id="previewProductPrice">Price: </p>
        <p id="previewProductDescription">Description: </p>
        <p id="previewProductCategory">Category: </p>
        
        <div id="previewImageContainer" style="display: flex; justify-content: space between; margin-top: 20px;">
            
        </div>
        <button id="closePreviewModal">Close</button>
    </div>
</div> -->



</div>

</section>





<!-- Header Section Script -->
<script>
    // Menu toggle button 
    const toggleButton = document.getElementById("toggle-button");
    const toggleMenu = document.getElementById("toggle-menu");
    var toggleCounter = 1;
    toggleButton.onclick = function () {
        toggleCounter++;
        if (toggleCounter % 2 == 0) {
            toggleMenu.classList.remove("hidden");
            toggleMenu.classList.add("grid");
        }
        else {
            toggleMenu.classList.remove("grid");
            toggleMenu.classList.add("hidden");
        }
    }


</script>


<!-- Accordion Script -->
<!-- <script>
    const accordionButtons = document.querySelectorAll('.accordion-button');
    const accordionMenu = document.querySelectorAll('.menu-collapse');

    accordionButtons.forEach(button => {
        button.addEventListener('click', () => {
            const accordionCollapse = button.nextElementSibling;
            button.setAttribute('aria-expanded', button.getAttribute('aria-expanded') === 'false' ? 'true' : 'false');
            accordionCollapse.classList.toggle('hidden');
        });
    });

    // Set all accordion items to collapsed state by default
    document.querySelectorAll('.menu-collapse').forEach(collapse => {
        collapse.classList.add('hidden');
    });

    // document.addEventListener('click', function (e) {
    //     if (!accordionMenu.contains(e.target) && !accordionButtons.contains(e.target)) {
    //         accordionMenu.classList.add('hidden');
    //     }
    // });

    document.addEventListener('click', function (e) {
        const isButton = Array.from(accordionButtons).some(button => button.contains(e.target));
        const isMenu = Array.from(accordionMenu).some(menu => menu.contains(e.target));

        if (!isButton && !isMenu) {
            Array.from(accordionMenu).forEach(menu => {
                menu.classList.add('hidden');
            });
        }
    });


</script> -->

<script>
    // JavaScript to handle dynamically adding and removing subcategory fields
    document.getElementById("addBtn").addEventListener("click", function () {
        const variantContainer = document.getElementById("variantContainer");
        const newVariantField = document.createElement("div");
        newVariantField.className = "col-span-1 xl:col-span-2";
        newVariantField.innerHTML = `
        <p class="text-tColor3 mb-2">Variant Name</p>
    <input class=" border rounded px-3 py-2 flex-1 focus:outline-none focus:shadow-outline w-full"
                                type="text" id="variant_name" name="variant_name" placeholder="Variant Name">
                                <p class="text-tColor3 mb-2">Price</p>
                                <input
                                    class=" border rounded-r rounded-l px-3 py-2 flex-1 mb-4 focus:outline-none focus:shadow-outline w-full"
                                    type="number" id="variant_price" name="variant_price" placeholder="Variant Price">
                            </div>
                            
      <button type="button"  style="margin-left: 10px;" class="background-tertiaryColor text-white px-4 py-1 mb-4 rounded" onclick="removeSubcategoryField(this)">Remove</button>
    `;
        variantContainer.appendChild(newVariantField);
    });

    function removeSubcategoryField(button) {
        button.parentNode.remove();
    }
</script>

<script>
    function displaySelectedImage1() {
        const fileInput = document.getElementById("featured_image");
        // const labelText = document.getElementById("label-text");
        const selectedImageName = document.getElementById("selected-image-name");
        const selectedImage = document.getElementById("selected-image");

        if (fileInput.files.length > 0) {
            // labelText.style.display = "none";
            const imageName = fileInput.files[0].name;
            selectedImageName.textContent = `Selected Image: ${imageName}`;
            selectedImage.src = URL.createObjectURL(fileInput.files[0]);
            selectedImage.classList.remove("hidden");
        } else {
            // labelText.style.display = "block";
            selectedImageName.textContent = "";
            selectedImage.src = "";
            selectedImage.classList.add("hidden");
        }
    }
</script>

<script>
    let inputCounter = 1; // Initialize the counter for input elements

    document.getElementById("addImageBtn").addEventListener("click", function () {
        const productImageContainer = document.getElementById("productImageContainer");
        const newProductImageField = document.createElement("div");
        newProductImageField.className = "flex items-center mb-2";

        // Generate the next input and image IDs
        const inputId = `product_image${inputCounter}`;
        const imgId = `selected-image${inputCounter}`;

        newProductImageField.innerHTML = `
            <input id="${inputId}" name="product-image" type="file" class="dropzone-file custom-file-label" style="margin-top: 5px;" class="hidden"
                onchange="displaySelectedImage('${inputId}', '${imgId}')"/>
            <p id="selected-image-name${inputCounter}" class="text-tColor2 mt-3"></p>
            <img id="${imgId}" src="#" alt="" class="hidden"/>
            <button type="button" style="margin-left: 10px;" class="background-tertiaryColor text-white px-4 py-1 rounded" onclick="removeSubcategoryField(this)">Remove</button>
        `;

        productImageContainer.appendChild(newProductImageField);

        // Increment the input counter
        inputCounter++;
    });

    function removeSubcategoryField(button) {
        button.parentNode.remove();
    }

    function displaySelectedImage(inputId, imgId) {
        const fileInput = document.getElementById(inputId);
        const selectedImageName = document.getElementById(`selected-image-name${inputId.replace("product_image", "")}`);
        const selectedImage = document.getElementById(imgId);

        if (fileInput.files.length > 0) {
            const imageName = fileInput.files[0].name;
            selectedImageName.textContent = `Selected Image: ${imageName}`;
            selectedImage.src = URL.createObjectURL(fileInput.files[0]);
            selectedImage.classList.remove("hidden");
        } else {
            selectedImageName.textContent = "";
            selectedImage.src = "";
            selectedImage.classList.add("hidden");
        }
    }
</script>



<script>
    const tables = document.querySelectorAll('.table-collapse');
    window.onclick = function (event) {
        for (let table of tables) {
            if (event.target == table) {
                table.classList.toggle('hidden');
            }
        }
    };
</script>

<!-- <script>
    // Add an event listener to preview the product
    document.getElementById("previewButton").addEventListener("click", function () {
        // Get product information from form fields
        const productName = document.getElementById("product_name").value;
        const productPrice = document.getElementById("product_price").value;
        const productDescription = document.getElementById("product_description").value;
        const productCategory = document.getElementById("product_cat_id").value;

        // Create an image container
        const imageContainer = document.getElementById("imageContainer");
        imageContainer.innerHTML = ""; // Clear the container

        // Get the product feature image
        const featureImageInput = document.querySelector('input[name="product-featured-image"]');
        const featureImage = featureImageInput.files[0];
        if (featureImage) {
            const featureImageElement = document.createElement("img");
            featureImageElement.src = URL.createObjectURL(featureImage);
            featureImageElement.alt = "Feature Image";
            featureImageElement.style.maxWidth = "100px"; // Adjust the image size as needed
            featureImageElement.style.marginRight = "10px";
            imageContainer.appendChild(featureImageElement);
        }

        // Get additional product images
        const additionalImageInputs = document.querySelectorAll('input[name="product-image"]');
        additionalImageInputs.forEach((input) => {
            const image = input.files[0];
            if (image) {
                const imageElement = document.createElement("img");
                imageElement.src = URL.createObjectURL(image);
                imageElement.alt = "Additional Image";
                imageElement.style.maxWidth = "100px"; // Adjust the image size as needed
                imageElement.style.marginRight = "10px";
                imageContainer.appendChild(imageElement);
            }
        });

        // Display the product information in the preview modal
        const previewModal = document.getElementById("previewModal");
        previewModal.innerHTML = `
        

            <h1>Product Preview</h1>
            <p>Product Name: ${productName}</p>
            <p>Price: ${productPrice}</p>
            <p>Description: ${productDescription}</p>
            <p>Category: ${productCategory}</p>
            
        `;

        // Show the preview modal
        previewModal.classList.remove("hidden");
    });
</script> -->




</body>

</html>
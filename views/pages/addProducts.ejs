<%- include('../partials/navigation.ejs') %>
<div class="mx-5 rounded-md">

    <div class="flex justify-between items-center flex-wrap gap-5 border-b py-10">
        <p class="text-xl xl:text-2xl font-semibold text-tColor2">Add Branded Product</p>
        <!-- <button id="previewButton" class="bg-[#504F54] text-white px-7 py-3 rounded flex items-center gap-2">

            <i class="fa-solid fa-eye"></i>

            <p>Preview</p>

        </button> -->
    </div>

    <!-- Product Upload Section -->
    <form action="/add-products" method="POST" enctype="multipart/form-data">
        <div class="grid grid-cols-1 xl:grid-cols-4 relative">

            <!-- Product Left Section -->
            <div class="col-span-3 xl:border-r xl:pr-5">

                <p class="font-semibold text-lg text-tColor2 pt-5">Product Information</p>

                <!-- Product Information Input Section -->
                <div class="grid grid-cols-1 xl:grid-cols-3 gap-5 mt-5">

                    <div class="col-span-1 xl:col-span-2">
                        <p class="text-tColor3 mb-2">Product Name</p>
                        <input class=" border rounded px-3 py-2 flex-1 focus:outline-none focus:shadow-outline w-full"
                            type="text" id="product_name" name="product_name" placeholder="Product Name">
                    </div>

                    <div class="col-span-1">
                        <p class="text-tColor3 mb-2">Price</p>
                        <div class="flex mb-4 items-center">
                            <div class="relative">
                                <select
                                    class=" border rounded-l px-3 py-2 pr-8 appearance-none focus:outline-none focus:shadow-outline"
                                    id="country-code" name="country-code">
                                    <option value="USD">USD</option>
                                    <option value="GPT">GPT</option>
                                    <option value="INR">INR</option>
                                    <!-- Add more options here -->
                                </select>
                                <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                                    <i class="text-sm fa-solid fa-angle-down"></i>
                                </div>
                            </div>
                            <input
                                class=" border rounded-r border-l-0 px-3 py-2 flex-1 focus:outline-none focus:shadow-outline w-full"
                                type="number" id="product_price" name="product_price" placeholder="Price">
                        </div>
                    </div>

                    <div class="col-span-1 xl:col-span-2">
                        <p class="text-tColor3 mb-2">Product Quantity</p>
                        <input class=" border rounded px-3 py-2 flex-1 focus:outline-none focus:shadow-outline w-full"
                            type="number" id="quantity" name="quantity" placeholder="Product Quantity">
                    </div>

                </div>



                <!-- Product Right Section -->
                <div class="xl:absolute top-0 right-0 xl:pl-5 xl:w-1/4">
                    <p class="font-semibold text-lg text-tColor2 py-5">Primary Details</p>

                    <div>
                        <p class="text-tColor3 mb-2">Category</p>
                        <div class="relative">
                            <select
                                class=" border rounded-l px-3 py-2 pr-8 appearance-none focus:outline-none focus:shadow-outline w-full"
                                id="product_cat_id" name="product_cat_id">
                                <% for(let cat of extraCat){ %>
                                <option value="<%= cat.extra_cat_id %>"><%= cat.extra_cat_name %></option>
                                <% } %>
                                <!-- Add more options here -->
                            </select>
                            <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                                <i class="text-sm fa-solid fa-angle-down"></i>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="border-b pb-10">
                    <p class="text-tColor3 mb-2">Description</p>
                    <textarea class="border rounded-r px-3 py-2 flex-1 focus:outline-none focus:shadow-outline w-full"
                        id="product_description" name="product_details_des" rows="4" cols="50"
                        placeholder="Enter Product Description"></textarea>
                </div>

                <div id="imageContainer" style="display: flex; justify-content: space-between; margin-top: 20px;"></div>


                <!-- Product Image Upload Section -->
                <div class="border-b py-10 w-fit">
                    <p class="font-semibold text-lg text-tColor2 mb-2">Media</p>


                    <p class="text-tColor3 mb-2">Product Feature Image</p>
                    <input name="product-featured-image" type="file"
                        class="dropzone-feature-file custom-feature-file-label" style="margin-top: 5px;" required />
                    <hr class="mt-2">
                    <div class="border-b pb-10">
                        <p class="text-tColor3 mb-2">Add Product Image</p>
                        <div class="mb-4" id="productImageContainer">
                            <!-- product image fields will be dynamically added here -->
                        </div>
                        <button type="button" class="bg-primaryColor text-white rounded px-4 py-2" id="addImageBtn">Add
                            Image</button>

                    </div>
                </div>

                <div
                    class="flex justify-center xl:justify-between items-center flex-wrap gap-5 border rounded p-5 mb-5">
                    <p class="w-full xl:w-fit text-center">Saved on system <span>5 mins</span> ago</p>
                    <!-- <button class="xl:ml-auto bg-orange-100 rounded"><i
                            class="fa-regular fa-trash-can w-full text-tertiaryColor p-3"></i></button> -->
                    <button type="submit" class="bg-primaryColor text-white rounded px-4 py-2">+ Save Products</button>
                </div>

            </div>

        </div>

    </form>

</div>

<!-- <div id="previewModal" class="hidden">
    <div class="modal-content">
        <h1>Product Preview</h1>
        <p id="previewProductName">Product Name: </p>
        <p id="previewProductPrice">Price: </p>
        <p id="previewProductDescription">Description: </p>
        <p id="previewProductCategory">Category: </p>
        
        <div id="previewImageContainer" style="display: flex; justify-content: space between; margin-top: 20px;">
            
        </div>
        <button id="closePreviewModal">Close</button>
    </div>
</div> -->



</div>

</section>





<!-- Header Section Script -->
<script>
    // Menu toggle button 
    const toggleButton = document.getElementById("toggle-button");
    const toggleMenu = document.getElementById("toggle-menu");
    var toggleCounter = 1;
    toggleButton.onclick = function () {
        toggleCounter++;
        if (toggleCounter % 2 == 0) {
            toggleMenu.classList.remove("hidden");
            toggleMenu.classList.add("grid");
        }
        else {
            toggleMenu.classList.remove("grid");
            toggleMenu.classList.add("hidden");
        }
    }


</script>


<!-- Accordion Script -->
<!-- <script>
    const accordionButtons = document.querySelectorAll('.accordion-button');
    const accordionMenu = document.querySelectorAll('.menu-collapse');

    accordionButtons.forEach(button => {
        button.addEventListener('click', () => {
            const accordionCollapse = button.nextElementSibling;
            button.setAttribute('aria-expanded', button.getAttribute('aria-expanded') === 'false' ? 'true' : 'false');
            accordionCollapse.classList.toggle('hidden');
        });
    });

    // Set all accordion items to collapsed state by default
    document.querySelectorAll('.menu-collapse').forEach(collapse => {
        collapse.classList.add('hidden');
    });

    // document.addEventListener('click', function (e) {
    //     if (!accordionMenu.contains(e.target) && !accordionButtons.contains(e.target)) {
    //         accordionMenu.classList.add('hidden');
    //     }
    // });

    document.addEventListener('click', function (e) {
        const isButton = Array.from(accordionButtons).some(button => button.contains(e.target));
        const isMenu = Array.from(accordionMenu).some(menu => menu.contains(e.target));

        if (!isButton && !isMenu) {
            Array.from(accordionMenu).forEach(menu => {
                menu.classList.add('hidden');
            });
        }
    });


</script> -->

<script>
    // JavaScript to handle dynamically adding and removing subcategory fields
    document.getElementById("addImageBtn").addEventListener("click", function () {
        const productImageContainer = document.getElementById("productImageContainer");
        const newProdcutImageField = document.createElement("div");
        newProdcutImageField.className = "flex items-center mb-2";
        newProdcutImageField.innerHTML = `
    <input  name="product-image" type="file" class="dropzone-file custom-file-label" style="margin-top: 5px;" />
      <button type="button"  style="margin-left: 10px;" class="background-tertiaryColor text-white px-4 py-1 rounded" onclick="removeSubcategoryField(this)">Remove</button>
    `;
        productImageContainer.appendChild(newProdcutImageField);
    });

    function removeSubcategoryField(button) {
        button.parentNode.remove();
    }
</script>

<script>
    const tables = document.querySelectorAll('.table-collapse');
    window.onclick = function (event) {
        for (let table of tables) {
            if (event.target == table) {
                table.classList.toggle('hidden');
            }
        }
    };
</script>

<script>
    // Add an event listener to preview the product
    document.getElementById("previewButton").addEventListener("click", function () {
        // Get product information from form fields
        const productName = document.getElementById("product_name").value;
        const productPrice = document.getElementById("product_price").value;
        const productDescription = document.getElementById("product_description").value;
        const productCategory = document.getElementById("product_cat_id").value;

        // Create an image container
        const imageContainer = document.getElementById("imageContainer");
        imageContainer.innerHTML = ""; // Clear the container

        // Get the product feature image
        const featureImageInput = document.querySelector('input[name="product-featured-image"]');
        const featureImage = featureImageInput.files[0];
        if (featureImage) {
            const featureImageElement = document.createElement("img");
            featureImageElement.src = URL.createObjectURL(featureImage);
            featureImageElement.alt = "Feature Image";
            featureImageElement.style.maxWidth = "100px"; // Adjust the image size as needed
            featureImageElement.style.marginRight = "10px";
            imageContainer.appendChild(featureImageElement);
        }

        // Get additional product images
        const additionalImageInputs = document.querySelectorAll('input[name="product-image"]');
        additionalImageInputs.forEach((input) => {
            const image = input.files[0];
            if (image) {
                const imageElement = document.createElement("img");
                imageElement.src = URL.createObjectURL(image);
                imageElement.alt = "Additional Image";
                imageElement.style.maxWidth = "100px"; // Adjust the image size as needed
                imageElement.style.marginRight = "10px";
                imageContainer.appendChild(imageElement);
            }
        });

        // Display the product information in the preview modal
        const previewModal = document.getElementById("previewModal");
        previewModal.innerHTML = `
        

            <h1>Product Preview</h1>
            <p>Product Name: ${productName}</p>
            <p>Price: ${productPrice}</p>
            <p>Description: ${productDescription}</p>
            <p>Category: ${productCategory}</p>
            
        `;

        // Show the preview modal
        previewModal.classList.remove("hidden");
    });
</script>




</body>

</html>